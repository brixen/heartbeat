.result
  %p.timeframe Week of #{@result.start_date.format_like 'August 4, 2014'}

  .previous-link
    - if @result.previous.present?
      = link_to [@result.previous, scope: params[:scope]] do
        = icon 'arrow-left'
    - else
      %span.muted= icon 'arrow-left'

  .next-link
    - if @result.next.present?
      = link_to [@result.next, scope: params[:scope]] do
        = icon 'arrow-right'
    - else
      %span.muted= icon 'arrow-right'

  - if @result.empty?
    %section.summary
      %p No data.
  - elsif not @result.complete?
    %section.summary
      %p
        %strong In progress!
      %p Report is #{number_to_percentage @result.representation*100, precision: 0} complete, with #{@result.sample.complete.count} of #{@result.sample.count} reporting - come back when we hit 50%.
      %p 
  - else
    - @metric_results.each do |metric_result|
      - cache(metric_result) do
        %section.result-metric{id: metric_result.meta[:slug]}
          %header
            %h1{title: metric_result.meta[:description]}= metric_result.meta[:name]

          .data
            .bar-chart{title: 'Total ratings, from 1 to 4'}= column_chart metric_result.rating_counts, height: '50px', width: '100px', library: {titlePosition: 'none', chartArea: {top: '0', width: '100%', height: '100%'}, hAxis: {title: ''}, vAxis: {title: '', gridlines: {color: 'transparent'}}, enableInteractivity: false}

            .rating.value.active{data: {sparkline_key: 'rating'}}= metric_result.rating

            %ul.stats
              %li.delta.value{title: 'Delta: Change from last week', data: {sparkline_key: 'delta'}}
                - if metric_result.delta == 0
                  = icon 'pause'
                - elsif metric_result.delta > 0
                  = icon 'arrow-up'
                - else
                  = icon 'arrow-down'
                = metric_result.delta
              %li.volatility.value{title: 'Volatility: The standard deviation of ratings for each user between this and last week, averaged across all users', data: {sparkline_key: 'volatility'}}
                = icon 'bolt'
                - if metric_result.volatility.nan?
                  ?
                - else
                  = metric_result.volatility
              %li.representation.value{title: "Response rate: #{metric_result.sample.complete.count} of #{metric_result.sample.count}", data: {sparkline_key: 'representation'}}
                = icon 'user'
                = number_to_percentage metric_result.representation*100, precision: 0
              %li.unity.value{title: 'Unity: A percentage indicating how closely each team\'s ratings fall', data: {sparkline_key: 'unity'}}
                = icon 'dot-circle-o'
                - if metric_result.unity.nan?
                  ?
                - else
                  = number_to_percentage metric_result.unity*100, precision: 0

            .sparklines
              - [:rating, :delta, :volatility, :representation, :unity].each do |thing|
                %div{class: "sparkline #{thing} #{'active' if thing == :rating}", title: "The last #{metric_result.sparklines[thing].size} weeks of data"}
                  = render partial: 'sparkline', locals: {data: metric_result.sparklines[thing]}

          - if metric_result.public_comments.any?
            %ul.comments
              - metric_result.public_comments.each do |comment|
                %li.comment
                  .content= simple_format comment.body
                  .author{title: comment.user.name}= comment.user.abbreviated_name
          - else
            %p.comments.none
              (no comments)

    - cache(@result) do
      %section.result-comments
        %h1 General Comments
        - if @result.public_comments.any?
          %ul.comments
            - @result.public_comments.each do |comment|
              %li.comment
                .content= simple_format comment.body
                .author{title: comment.user.name}= comment.user.abbreviated_name
        - else
          %p.comments.none
            (no comments)

      %section.summary
        %ul
          %li
            .label Overall response rate:
            .value= number_to_percentage @result.representation*100, precision: 0
            .context (#{@result.sample.complete.count} of #{@result.sample.count})
          / %li
          /   .label Best response time:
          /   .value= @result.shortest_time_to_completion
          /   .context

    %section.definitions
      %h1 Definitions

      %dl
        %dt Rating
        %dd 1 (emphatically bad), 2 (eh, bad), 3 (eh, good), or 4 (emphatically good).

        %dt Unity
        %dd
          %p A percentage indicating how closely each team's ratings fall. All 3's would be 100%, or perfect unity; an equal number of 0's and 4's would be 0%, or no unity.
          %p <code>average(1 - variance(ratings for each team) / variance([1, 4]))</code>

        %dt Volatility
        %dd
          %p The standard deviation of ratings for each user between this and last week, averaged across all users.
